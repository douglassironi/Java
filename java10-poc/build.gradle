buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "org.springframework.boot" version "2.0.2.RELEASE"
    id 'java-library'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "2.6.2"
//    id 'org.gradle.java.experimental-jigsaw' version '0.1.1'
}

dependencies {
    compile project(':impl')
    compile project(':contract')
    compile project(':app')
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
//    apply plugin: 'io.spring.dependency-management'

    group = 'com.api'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_1_10
    targetCompatibility = JavaVersion.VERSION_1_10


    repositories {
        mavenLocal()
        jcenter()
    mavenCentral()
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
        compile("org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}")
//      compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
//      compileOnly 'javax.annotation:javax.annotation-api:1.3.1'
//      compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: '2.0.0.RELEASE'
//      compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-zipkin', version:'2.0.0.M7'
//      compile('com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:1.3.2')
//      compile group: 'io.zipkin.reporter', name: 'zipkin-sender-urlconnection', version: '1.1.2'
//        compile files('lib/ojdbc6.jar')
        compile files('lib/lombok-edge.jar')
//        compile('javax.xml.bind:jaxb-api:2.3.0')
//        compile('com.sun.xml.bind:jaxb-core:2.3.0')
//        compile('com.sun.xml.bind:jaxb-impl:2.3.0')
//        compile('javax.activation:activation:1.1.1')
//        compile('com.google.code.gson:gson:2.8.5')


        testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    }

    jacocoTestReport {
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }
}


jar {
    manifest {
        attributes 'Main-Class': 'com.douglassironi.Application'
    }
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

task jacocoMerge(type: JacocoMerge) {
    subprojects.each { subproject ->
        executionData subproject.tasks.withType(Test)
    }
}